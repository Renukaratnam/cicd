pipeline {
    agent any
    stages {
        stage('Sonar Analysis') {
            steps {
                echo 'Testing..'
                sh 'cd webapp && sudo docker run  --rm -e SONAR_HOST_URL="http://15.206.210.7:9000" -e SONAR_LOGIN="sqp_f33ed664b6a5cbc1e13159c2aea42bbb3247f5bd"  -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms-frontend'
            }
        }
        stage('Build LMS') {
            steps {
                echo 'Building..'
                sh 'cd webapp && npm install && npm run build'
            }
        }
        stage('Release LMS') {
            steps {
                script {
                    echo "Releasing.."
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version
                    echo "${packageJSONVersion}"
                    sh "zip webapp/dist-${packageJSONVersion}.zip -r webapp/dist"
                    sh "curl -v -u admin:gopal --upload-file webapp/dist-${packageJSONVersion}.zip http://15.206.210.7:8081/repository/lms/"
            }
            }
        }
        stage('Deploy LMS') {
            steps {
                script {
                    echo "Deploying.."
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version
                    echo "${packageJSONVersion}"
                    sh "curl -u admin:gopal -X GET \'http://15.206.210.7:8081/repository/lms/dist-${packageJSONVersion}.zip\' --output dist-'${packageJSONVersion}'.zip"
                    sh "sudo apt install nginx -y"
                    sh 'sudo rm -rf /var/www/html/*'
                    sh "sudo unzip -o dist-'${packageJSONVersion}'.zip"
                    sh "sudo cp -r webapp/dist/* /var/www/html/"
                

            }
            }
        }
    }
}
